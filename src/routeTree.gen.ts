/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AnchorRouteImport } from './routes/anchor'
import { Route as PathlessLayoutRouteImport } from './routes/_pathlessLayout'
import { Route as PostsRouteRouteImport } from './routes/posts.route'
import { Route as PostsIndexRouteImport } from './routes/posts.index'
import { Route as PathlessLayoutIndexRouteImport } from './routes/_pathlessLayout/index'
import { Route as PostsPostIdRouteImport } from './routes/posts.$postId'
import { Route as testingLeafLinkOSS20bRouteImport } from './routes/(testing)/LeafLinkOSS20b'
import { Route as ExamplesExampleIdModelIdRouteImport } from './routes/examples_/$exampleId/$modelId'
import { Route as PathlessLayoutExamplesExampleIdRouteImport } from './routes/_pathlessLayout/examples/$exampleId'

const AnchorRoute = AnchorRouteImport.update({
  id: '/anchor',
  path: '/anchor',
  getParentRoute: () => rootRouteImport,
} as any)
const PathlessLayoutRoute = PathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRouteRoute = PostsRouteRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)
const PathlessLayoutIndexRoute = PathlessLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PathlessLayoutRoute,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRouteRoute,
} as any)
const testingLeafLinkOSS20bRoute = testingLeafLinkOSS20bRouteImport.update({
  id: '/(testing)/LeafLinkOSS20b',
  path: '/LeafLinkOSS20b',
  getParentRoute: () => rootRouteImport,
} as any)
const ExamplesExampleIdModelIdRoute =
  ExamplesExampleIdModelIdRouteImport.update({
    id: '/examples_/$exampleId/$modelId',
    path: '/examples/$exampleId/$modelId',
    getParentRoute: () => rootRouteImport,
  } as any)
const PathlessLayoutExamplesExampleIdRoute =
  PathlessLayoutExamplesExampleIdRouteImport.update({
    id: '/examples/$exampleId',
    path: '/examples/$exampleId',
    getParentRoute: () => PathlessLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/posts': typeof PostsRouteRouteWithChildren
  '/anchor': typeof AnchorRoute
  '/LeafLinkOSS20b': typeof testingLeafLinkOSS20bRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/': typeof PathlessLayoutIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/examples/$exampleId': typeof PathlessLayoutExamplesExampleIdRoute
  '/examples/$exampleId/$modelId': typeof ExamplesExampleIdModelIdRoute
}
export interface FileRoutesByTo {
  '/anchor': typeof AnchorRoute
  '/LeafLinkOSS20b': typeof testingLeafLinkOSS20bRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/': typeof PathlessLayoutIndexRoute
  '/posts': typeof PostsIndexRoute
  '/examples/$exampleId': typeof PathlessLayoutExamplesExampleIdRoute
  '/examples/$exampleId/$modelId': typeof ExamplesExampleIdModelIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/posts': typeof PostsRouteRouteWithChildren
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/anchor': typeof AnchorRoute
  '/(testing)/LeafLinkOSS20b': typeof testingLeafLinkOSS20bRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/_pathlessLayout/': typeof PathlessLayoutIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/_pathlessLayout/examples/$exampleId': typeof PathlessLayoutExamplesExampleIdRoute
  '/examples_/$exampleId/$modelId': typeof ExamplesExampleIdModelIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/posts'
    | '/anchor'
    | '/LeafLinkOSS20b'
    | '/posts/$postId'
    | '/'
    | '/posts/'
    | '/examples/$exampleId'
    | '/examples/$exampleId/$modelId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/anchor'
    | '/LeafLinkOSS20b'
    | '/posts/$postId'
    | '/'
    | '/posts'
    | '/examples/$exampleId'
    | '/examples/$exampleId/$modelId'
  id:
    | '__root__'
    | '/posts'
    | '/_pathlessLayout'
    | '/anchor'
    | '/(testing)/LeafLinkOSS20b'
    | '/posts/$postId'
    | '/_pathlessLayout/'
    | '/posts/'
    | '/_pathlessLayout/examples/$exampleId'
    | '/examples_/$exampleId/$modelId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  AnchorRoute: typeof AnchorRoute
  testingLeafLinkOSS20bRoute: typeof testingLeafLinkOSS20bRoute
  ExamplesExampleIdModelIdRoute: typeof ExamplesExampleIdModelIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/anchor': {
      id: '/anchor'
      path: '/anchor'
      fullPath: '/anchor'
      preLoaderRoute: typeof AnchorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/_pathlessLayout/': {
      id: '/_pathlessLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PathlessLayoutIndexRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/(testing)/LeafLinkOSS20b': {
      id: '/(testing)/LeafLinkOSS20b'
      path: '/LeafLinkOSS20b'
      fullPath: '/LeafLinkOSS20b'
      preLoaderRoute: typeof testingLeafLinkOSS20bRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/examples_/$exampleId/$modelId': {
      id: '/examples_/$exampleId/$modelId'
      path: '/examples/$exampleId/$modelId'
      fullPath: '/examples/$exampleId/$modelId'
      preLoaderRoute: typeof ExamplesExampleIdModelIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pathlessLayout/examples/$exampleId': {
      id: '/_pathlessLayout/examples/$exampleId'
      path: '/examples/$exampleId'
      fullPath: '/examples/$exampleId'
      preLoaderRoute: typeof PathlessLayoutExamplesExampleIdRouteImport
      parentRoute: typeof PathlessLayoutRoute
    }
  }
}

interface PostsRouteRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

interface PathlessLayoutRouteChildren {
  PathlessLayoutIndexRoute: typeof PathlessLayoutIndexRoute
  PathlessLayoutExamplesExampleIdRoute: typeof PathlessLayoutExamplesExampleIdRoute
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutIndexRoute: PathlessLayoutIndexRoute,
  PathlessLayoutExamplesExampleIdRoute: PathlessLayoutExamplesExampleIdRoute,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  PostsRouteRoute: PostsRouteRouteWithChildren,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  AnchorRoute: AnchorRoute,
  testingLeafLinkOSS20bRoute: testingLeafLinkOSS20bRoute,
  ExamplesExampleIdModelIdRoute: ExamplesExampleIdModelIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
